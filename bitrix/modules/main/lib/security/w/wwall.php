<? namespace Bitrix\Main\Security\W;$GLOBALS['____1960050366']= array(base64_decode('d'.'G'.'ltZQ=='),base64_decode(''.'dGl'.'tZQ=='),base64_decode('anNvbl9kZWN'.'v'.'ZGU='),base64_decode(''.'YXJyYX'.'lfbWVyZ2U='),base64_decode('am'.'9p'.'bg=='),base64_decode('am9pbg=='),base64_decode('am9p'.'b'.'g='.'='),base64_decode('Y'.'XJyYX'.'lfcG9w'),base64_decode('YX'.'J'.'yYXlfc2hpZ'.'nQ='),base64_decode(''.'YXJy'.'YXlfc2hpZnQ'.'='),base64_decode(''.'YXJyYXl'.'fc2'.'hpZnQ='),base64_decode(''.'YXJy'.'YXlfc2hpZn'.'Q='),base64_decode('YXJyY'.'Xl'.'f'.'bWV'.'yZ2U='),base64_decode('aXNfYX'.'JyYXk='),base64_decode(''.'YXJ'.'yYXlf'.'bWVy'.'Z2U='),base64_decode('aW5fYXJyY'.'Xk='),base64_decode('aW5f'.'YXJyYX'.'k='),base64_decode('aW5f'.'YX'.'Jy'.'Y'.'X'.'k='),base64_decode('aW5fYXJyYXk'.'='),base64_decode(''.'aW5fYXJyYX'.'k='),base64_decode('dGltZQ=='),base64_decode('dGltZQ=='),base64_decode(''.'YXJyYXl'.'fbWF'.'w'),base64_decode('anNvbl9lbmN'.'vZGU='),base64_decode(''.'anNv'.'bl9lbm'.'NvZGU='),base64_decode('am'.'9p'.'b'.'g='.'='));if(!function_exists(__NAMESPACE__.'\\___1275130323')){function ___1275130323($_645322763){static $_495620810= false; if($_495620810 == false) $_495620810=array('V1dBTExfTE9D'.'Sw==','c2VjdXJpd'.'Hk'.'=','Y2FjaGU=','dH'.'Rs','REFUQQ='.'=','eyI'.'=','V'.'1d'.'BT'.'Exf'.'T'.'E'.'9DSw==','c2V'.'jd'.'XJpdH'.'k=','U0V'.'DVV'.'JJVFl'.'fV'.'1d'.'BT'.'E'.'xfR'.'VhDRVBU'.'SU9O',''.'R'.'kFJ'.'TF'.'9DSEVDS'.'0lORw='.'=','Q2Fu'.'IG'.'5vdCB'.'leGVjd'.'XRlIHd3YWxsIHJ1bG'.'VzOi'.'A=','IFR'.'yYWNl'.'OiA=','Uk'.'VRVUVTVF9V'.'Ukk=','a2V5cw==',''.'d'.'mF'.'sd'.'WVz','U'.'0VD'.'V'.'VJJ'.'VFlfV1dBTExfTU'.'9E'.'SUZ'.'Z','Lg==','U0VDVVJJVFlfV1dBT'.'ExfVU5TRV'.'Q=','L'.'g='.'=','U0'.'VDVVJ'.'JV'.'Flf'.'V1d'.'BTExfR'.'VhJ'.'VA==',''.'Lg==','Z2xvYm'.'Fs','a2V5'.'cw==','dmF'.'sdWVz',''.'Z2V0',''.'Z2V0','cG'.'9'.'zd'.'A'.'==','cG9zd'.'A='.'=',''.'Y29v'.'a2ll',''.'Y29va'.'2'.'ll','cm'.'V'.'xd'.'W'.'VzdA==','cmV'.'xdWV'.'zdA==','Z2xvYmFs','Z2xvYmFs',''.'bWFpbl'.'9'.'zZWM'.'=','V1dB'.'TExf'.'QUNUV'.'U'.'FMSVpF'.'X1J'.'VTEVT','d'.'g==','dmVyc2lvbg'.'==','aQ==','aXNJbn'.'N0YW'.'x'.'sZWQ=','c29ja2'.'V'.'0VGltZW'.'9'.'1dA==','c'.'3R'.'yZ'.'WFt'.'V'.'G'.'lt'.'ZW91dA='.'=','KCc'.'=','ZGF0YQ==','J'.'ywgJw'.'==','bW9kdWxl','Jy'.'wgJw==',''.'bW9kdW'.'xl'.'X3Z'.'lcnN'.'pb'.'24=','Jyk'.'=',''.'LCA=',''.'U0VDV'.'VJJVF'.'lfV1'.'d'.'B'.'TExf'.'RVh'.'DRVBUSU9O','bWFpbg==',''.'RkFJTF9SRUZSRV'.'NISU5H',''.'Q2'.'FuI'.'G'.'5vdCByZWZy'.'ZX'.'NoIHd'.'3YWxsIHJ'.'1bGV'.'z'.'Oi'.'A=','I'.'FRyYW'.'Nl'.'OiA'.'=','ZGF0Y'.'Q==','eyI'.'=','LS0t'.'LS'.'1C'.'R'.'Ud'.'J'.'TiBQVU'.'JMSUMgS0VZ'.'LS0t'.'LS0=','Ck1J'.'SUJJ'.'akFOQ'.'mdrcW'.'hraUc5dzBCQVF'.'F'.'R'.'k'.'FBT0NBUTh'.'B'.'TUlJQkNnS'.'0N'.'BUUVBcTh'.'RRTB'.'Ia'.'m1I'.'Sl'.'V'.'TdF'.'dWNm4'.'wemE'.'KUlZvT'.'HgwMkt6YmZy'.'YlM'.'vUDZzV2F4VH'.'p'.'3O'.'FNlR'.'1R0'.'YlRDT3J'.'wSGk'.'1UUY'.'2T1J5al'.'ovWHh6L0t'.'M'.'V'.'T'.'F'.'HYm9mO'.'UN'.'aMwo0ej'.'dTa3FVd'.'DY'.'2aWJY'.'dk9'.'G'.'Qng0Zncv'.'QVBQU'.'kdEcX'.'RtM'.'G5EM2ZnR3'.'N1M1'.'JlUGd3'.'MjlpO'.'C'.'t'.'2bTd'.'tdEJLSlV'.'ZbDRyCl'.'ZwYjZzZ'.'lp'.'F'.'VDlLRW'.'I2V'.'DFIRFltRXZjMWhxL2lpdX'.'l4THJa'.'W'.'mk1U'.'TZVZmY0V'.'UV'.'2VEkrNjhz'.'c'.'0ZSa'.'1Erb3'.'d'.'UUnkK'.'ZU9JTWJG'.'aE0vVV'.'RtZ'.'l'.'Z'.'ZYlRSR'.'n'.'kyb'.'1VROFdNe'.'mE'.'ybko1U'.'2FoemkxVUtPMWpBalhU'.'UFJyemM'.'3QWp1'.'NjM5ajFP'.'MApw'.'cHFmbTV4Z1ds'.'R'.'kFKa0h'.'RVGd'.'iZ'.'G'.'Q'.'1QVdx'.'REZRa3Q'.'5SEtr'.'WStUbm'.'Z'.'CTEdWTXZWeVB'.'3V'.'E'.'hO'.'V1'.'FZQXc0eHB'.'nL3dB'.'Cl'.'p3S'.'URBUU'.'F'.'CCi0tLS'.'0'.'t'.'RU5EIFBVQkxJQ'.'yB'.'LRV'.'kt'.'LS0tLQ==');return base64_decode($_495620810[$_645322763]);}}; use Bitrix\Main\Application; use Bitrix\Main\Config\Option; use Bitrix\Main\Data\Cache; use Bitrix\Main\ModuleManager; use Bitrix\Main\Security\PublicKeyCipher; use Bitrix\Main\SystemException; use Bitrix\Main\Web\HttpClient; use Bitrix\Main\Web\Json; use Bitrix\Main\Security\W\Rules\Rule; use Bitrix\Main\Security\W\Rules\Results\RuleAction; use Bitrix\Main\Security\W\Rules\Results\RuleResult; use Bitrix\Main\Security\W\Rules\Results\CheckResult; use Bitrix\Main\Security\W\Rules\Results\ModifyResult; use Bitrix\Main\Type\ArrayHelper; use Bitrix\Main\Security\W\Rules\RuleRecordTable; class WWall{ const CACHE_RULES_TTL= 10800; private static $_21849018= 'https://wwall.bitrix.info/rules.php'; protected $_52960492= true; public function handle(){ try{  $_1753841873= Cache::createInstance(); $_1029763835= false; if($_1753841873->initCache(static::CACHE_RULES_TTL, 'WWALL_LOCK', 'security')){ $_896837949= $_1753841873->getVars(); if($GLOBALS['____1960050366'][0]()- $_896837949> round(0+4+4+4+4+4)){  $_751345842= Application::getConnection(); $_553428089= RuleRecordTable::getTableName(); $_751345842->truncateTable($_553428089); RuleRecordTable::cleanCache(); $_1753841873->clean(___1275130323(0), ___1275130323(1));}} elseif($_1753841873->startDataCache()){  $_1753841873->endDataCache($GLOBALS['____1960050366'][1]()); $_1029763835= true;}  $_1016755252= RuleRecordTable::getList([ ___1275130323(2) =>[___1275130323(3) => round(0+3600)* round(0+24)* round(0+7)]])->fetchAll(); foreach($_1016755252 as $_791740846){ $_2030805143= new PublicKeyCipher; $_953912237= $_2030805143->decrypt($_791740846[___1275130323(4)], static::__905948556()); if(!str_starts_with($_953912237, ___1275130323(5))){ continue;} $_1882873446= $GLOBALS['____1960050366'][2]($_953912237, true); if(!empty($_1882873446)){ $_1045544637= Rule::make($_1882873446); $_2126560971= $this->handleRule($_1045544637); $this->applyHandlingResults($_2126560971);}}  if($_1029763835){ $_1753841873->clean(___1275130323(6), ___1275130323(7));}} catch(\Throwable $_623125746){ $this->logEvent( ___1275130323(8), ___1275130323(9), ___1275130323(10). $_623125746->getMessage(). ___1275130323(11). $_623125746->getTraceAsString());}}  public function handleRule(Rule $_1045544637): array{ $_2126560971=[]; if($_1045544637->matchPath($_SERVER[___1275130323(12)])){  $_633368144= $this->getContextElements($_1045544637->getContext()); foreach($_633368144 as $_1411168487 => &$_612625431){ $_2126560971= $GLOBALS['____1960050366'][3]($_2126560971, $this->recursiveContextKeyHandle($_1411168487, $_612625431,[], $_1045544637));}} return $_2126560971;}  public function applyHandlingResults(array $_2126560971){ $_633368144= $this->getContextElements([ 'get', 'post', 'cookie', 'request', 'global']); foreach($_2126560971 as $_1515554752){ $_612625431=& $_633368144[$_1515554752->getContextName()]; $_1007262053= $_1515554752->getRuleResult(); $_1045544637= $_1515554752->getRule(); if($_1007262053 instanceof ModifyResult){ if($_1045544637->getProcess() === ___1275130323(13)){  static::rewriteContextKey( $_1515554752->getContextName(), $_612625431, $_1515554752->getContextKey(), $_1007262053->getCleanValue());} elseif($_1045544637->getProcess() === ___1275130323(14)){ static::rewriteContextValue( $_1515554752->getContextName(), $_612625431, $_1515554752->getContextKey(), $_1007262053->getCleanValue());} $this->logEvent( ___1275130323(15), $_1515554752->getContextName(), $GLOBALS['____1960050366'][4](___1275130323(16), $_1515554752->getContextKey()));} elseif($_1007262053 instanceof CheckResult &&!$_1007262053->isSuccess()){ if($_1007262053->getAction() === RuleAction::UNSET){ static::unsetContextValue( $_1515554752->getContextName(), $_612625431, $_1515554752->getContextKey(),); $this->logEvent( ___1275130323(17), $_1515554752->getContextName(), $GLOBALS['____1960050366'][5](___1275130323(18), $_1515554752->getContextKey()));} elseif($_1007262053->getAction() === RuleAction::EXIT){ $this->logEvent( ___1275130323(19), $_1515554752->getContextName(), $GLOBALS['____1960050366'][6](___1275130323(20), $_1515554752->getContextKey())); exit;}}}} public function disableEventLogging(){ $this->_52960492= false;} protected function rewriteContextKey($_1411168487, &$_612625431, $_1497497096, $_766927259){ $_1397983560= $_1497497096;  $GLOBALS['____1960050366'][7]($_1397983560); $_1397983560[]= $_766927259; if($_1411168487 === ___1275130323(21)){ $_884557524= $GLOBALS['____1960050366'][8]($_1497497096); $GLOBALS['____1960050366'][9]($_1397983560); if(empty($_1497497096)){ $GLOBALS[$_766927259]= $GLOBALS[$_884557524]; unset($GLOBALS[$_884557524]);} else{ $_612625431=& $GLOBALS[$_884557524]; $_981730779= ArrayHelper::getByNestedKey($_612625431, $_1497497096);  ArrayHelper::setByNestedKey($_612625431, $_1397983560, $_981730779);  ArrayHelper::unsetByNestedKey($_612625431, $_1497497096);}} else{ $_981730779= ArrayHelper::getByNestedKey($_612625431, $_1497497096);  ArrayHelper::setByNestedKey($_612625431, $_1397983560, $_981730779);  ArrayHelper::unsetByNestedKey($_612625431, $_1497497096);}} protected function rewriteContextValue($_1411168487, &$_612625431, $_906661094, $_981730779){ if($_1411168487 === 'global'){ $_884557524= $GLOBALS['____1960050366'][10]($_906661094); if(empty($_906661094)){ $GLOBALS[$_884557524]= $_981730779;} else{ $_612625431=& $GLOBALS[$_884557524]; ArrayHelper::setByNestedKey($_612625431, $_906661094, $_981730779);}} else{  ArrayHelper::setByNestedKey($_612625431, $_906661094, $_981730779);}} protected function unsetContextValue($_1411168487, &$_612625431, $_906661094){ if($_1411168487 === 'global'){ $_884557524= $GLOBALS['____1960050366'][11]($_906661094); if(empty($_906661094)){ unset($GLOBALS[$_884557524]);} else{ $_612625431=& $GLOBALS[$_884557524]; ArrayHelper::unsetByNestedKey($_612625431, $_906661094);}} else{ ArrayHelper::unsetByNestedKey($_612625431, $_906661094);}}  protected function recursiveContextKeyHandle(string $_1411168487, array &$_612625431, array $_298080022, Rule $_1045544637): array{  $_2126560971=[]; foreach($_612625431 as $_1792792013 => $_981730779){ $_906661094= $GLOBALS['____1960050366'][12]($_298080022,[$_1792792013]); if($_1045544637->matchKey($_906661094)){  if($_1045544637->getProcess() === ___1275130323(22)){ $_1007262053= $_1045544637->evaluate($_1792792013);} elseif($_1045544637->getProcess() === ___1275130323(23)){ $_1007262053= $_1045544637->evaluateValue($_981730779);}  if(!empty($_1007262053) && $_1007262053 instanceof RuleResult){ $_2126560971[]= new HandlingResult($_1411168487, $_906661094, $_1007262053, $_1045544637);}}  if($GLOBALS['____1960050366'][13]($_981730779)){ $_2126560971= $GLOBALS['____1960050366'][14]($_2126560971, $this->recursiveContextKeyHandle( $_1411168487, $_612625431[$_1792792013], $_906661094, $_1045544637));}} return $_2126560971;} protected function getContextElements(array $_1879640102){ $_1462539592=[]; if($GLOBALS['____1960050366'][15](___1275130323(24), $_1879640102, true)){ $_1462539592[___1275130323(25)]= &$_GET;} if($GLOBALS['____1960050366'][16](___1275130323(26), $_1879640102, true)){ $_1462539592[___1275130323(27)]= &$_POST;} if($GLOBALS['____1960050366'][17](___1275130323(28), $_1879640102, true)){ $_1462539592[___1275130323(29)]= &$_COOKIE;} if($GLOBALS['____1960050366'][18](___1275130323(30), $_1879640102, true)){ $_1462539592[___1275130323(31)]= &$_REQUEST;} if($GLOBALS['____1960050366'][19](___1275130323(32), $_1879640102, true)){ $_1462539592[___1275130323(33)]= $GLOBALS;} return $_1462539592;} public static function refreshRules(){ try{ $_1503596565= Option::get('main_sec', 'WWALL_ACTUALIZE_RULES', 0); if(($GLOBALS['____1960050366'][20]()- $_1503596565)< static::CACHE_RULES_TTL){ return;} Option::set(___1275130323(34), ___1275130323(35), $GLOBALS['____1960050366'][21]()); $_1435896740= null;  $_1951899513= $GLOBALS['____1960050366'][22](function($_790093501){ return[___1275130323(36) => $_790093501[___1275130323(37)], ___1275130323(38) => (int) $_790093501[___1275130323(39)]];}, ModuleManager::getModulesFromDisk());  $_1484829693= new HttpClient([ ___1275130323(40) => round(0+2.5+2.5), ___1275130323(41) => round(0+1.6666666666667+1.6666666666667+1.6666666666667)]); $_1464449236= $_1484829693->post( static::$_21849018,[ 'modules' => $GLOBALS['____1960050366'][23]($_1951899513), 'license' => Application::getInstance()->getLicense()->getHashLicenseKey()]); if($_1484829693->getStatus() == round(0+66.666666666667+66.666666666667+66.666666666667) &&!empty($_1464449236)){ $_1435896740= Json::decode($_1464449236);}  if($_1435896740 !== null){ $_751345842= Application::getConnection(); $_553428089= RuleRecordTable::getTableName(); if(!empty($_1435896740)){ foreach($_1435896740 as $_355793435){ if(!static::checkRuleSign($_355793435)){ throw new SystemException('Invalid sign for rule '.$GLOBALS['____1960050366'][24]($_355793435));}}}  $_751345842->truncateTable($_553428089);  if(!empty($_1435896740)){ $_853539826=[]; foreach($_1435896740 as $_355793435){ $_853539826[]= ___1275130323(42). $_751345842->getSqlHelper()->forSql($_355793435[___1275130323(43)]). ___1275130323(44). $_751345842->getSqlHelper()->forSql($_355793435[___1275130323(45)]). ___1275130323(46). $_751345842->getSqlHelper()->forSql($_355793435[___1275130323(47)]). ___1275130323(48);} $_756847956= $GLOBALS['____1960050366'][25](___1275130323(49), $_853539826);  $_751345842->query("INSERT INTO {$_553428089} (DATA, MODULE, MODULE_VERSION) VALUES {$_756847956}");  RuleRecordTable::cleanCache();}}} catch(\Throwable $_623125746){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, ___1275130323(50), ___1275130323(51), ___1275130323(52), ___1275130323(53). $_623125746->getMessage(). ___1275130323(54). $_623125746->getTraceAsString());}} protected static function checkRuleSign($_1045544637){ $_2030805143= new PublicKeyCipher; $_1882873446= $_2030805143->decrypt($_1045544637[___1275130323(55)], static::__905948556()); return str_starts_with($_1882873446, ___1275130323(56));} private static function __905948556(){ $_846185371= ''; $_846185371 .= ___1275130323(57); $_846185371 .= ___1275130323(58); return $_846185371;} protected function logEvent($_1227143675, $_812010916, $_697141600){ if($this->_52960492){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, $_1227143675, 'main', $_812010916, $_697141600);}}}?>